source env_variables

# we do clean staff at beginning of each run, so we can keep logs of the latset run
function cleanup_data() {
    rm -rf $WORK_DIR
    mkdir $WORK_DIR
    for target_db in "$@"; do
        run_sql "drop database if exists ${target_db}" $TIDB_PORT $TIDB_PASSWORD
    done
    run_sql "drop database if exists dm_meta" $TIDB_PORT $TIDB_PASSWORD
}

function cleanup_process() {
    pkill -hup dm-worker.test 2>/dev/null || true
    pkill -hup dm-master.test 2>/dev/null || true
    pkill -hup dm-tracer.test 2>/dev/null || true
    pkill -hup dm-syncer.test 2>/dev/null || true

    wait_process_exit dm-master.test
    wait_process_exit dm-worker.test
    wait_process_exit dm-tracer.test
    wait_process_exit dm-syncer.test
}

if [ "$RESET_MASTER" = true ]; then
    run_sql "RESET MASTER" $MYSQL_PORT1 $MYSQL_PASSWORD1
    run_sql "RESET MASTER" $MYSQL_PORT2 $MYSQL_PASSWORD2
fi

function join_string() {
    local IFS="$1"; shift; echo "$*";
}

# shortcut for start task on one DM-worker
function dmctl_start_task_standalone() {
    if [ $# -ge 1 ]; then
        task_conf=$1
    else
        task_conf="$cur/conf/dm-task.yaml"
    fi
    run_dm_ctl $WORK_DIR "127.0.0.1:$MASTER_PORT" \
        "start-task $task_conf" \
        "\"result\": true" 2 \
        "\"source\": \"$SOURCE_ID1\"" 1
}

# shortcut for start task on two DM-workers
function dmctl_start_task() {
    if [ $# -ge 2 ]; then
        remove_meta=$2
    else
        remove_meta=""
    fi
    if [ $# -ge 1 ]; then
        task_conf=$1
    else
        task_conf="$cur/conf/dm-task.yaml"
    fi
    run_dm_ctl $WORK_DIR "127.0.0.1:$MASTER_PORT" \
        "start-task $task_conf $remove_meta" \
        "\"result\": true" 3 \
        "\"source\": \"$SOURCE_ID1\"" 1 \
        "\"source\": \"$SOURCE_ID2\"" 1
}

# shortcut for stop task on two DM-workers
function dmctl_stop_task() {
    task_name=$1
    dmctl_operate_task $task_name stop-task
}

# shortcut for pause task on two DM-workers
function dmctl_pause_task() {
    task_name=$1
    dmctl_operate_task $task_name pause-task
}

# shortcut for stop task on two DM-workers
function dmctl_resume_task() {
    task_name=$1
    dmctl_operate_task $task_name resume-task
}

function dmctl_operate_task() {
    task_name=$1
    operate=$2
    run_dm_ctl $WORK_DIR "127.0.0.1:$MASTER_PORT" \
        "$operate $task_name" \
        "\"result\": true" 3 \
        "\"source\": \"$SOURCE_ID1\"" 1 \
        "\"source\": \"$SOURCE_ID2\"" 1
}

function dmctl_operate_source() {
    operate=$1
    source_toml=$2
    source_id=$3
    run_dm_ctl $WORK_DIR "127.0.0.1:$MASTER_PORT" \
        "operate-source $operate $source_toml" \
        "\"result\": true" 2 \
        "\"source\": \"$source_id\"" 1
}
