# Master Configuration.

# log configuration
log-level = "info"
log-file = "dm-master.log"

# dm-master listen address
master-addr = ":8261"

# addr(i.e. 'host:port') to advertise to the public
advertise-addr = "127.0.0.1:8261"

# human-readable name for this DM-master member
name = "dm-master"

# path to the data directory (default 'default.${name}')
data-dir = "default.dm-master"

# URLs for peer traffic
peer-urls = "http://127.0.0.1:8291"

# advertise URLs for peer traffic (default '${peer-urls}')
advertise-peer-urls = "http://127.0.0.1:8291"

# initial cluster configuration for bootstrapping, e.g. dm-master=http://127.0.0.1:8291
initial-cluster = "dm-master=http://127.0.0.1:8291"

# Join to an existing DM-master cluster, a string of existing cluster's endpoints.
join = ""

# rpc configuration
#
# rpc timeout is a positive number plus time unit. we use golang standard time
# units including: "ns", "us", "ms", "s", "m", "h". You should provide a proper
# rpc timeout according to your use scenario.
rpc-timeout = "30s"
# rpc limiter controls how frequently events are allowed to happen.
# It implements a "token bucket" of size `rpc-rate-limit`, initially full and
# refilled at rate `rpc-rate-limit` tokens per second. Note `rpc-rate-limit`
# is float64 type, so remember to add a decimal point and one trailing 0 if its
# literal value happens to be an integer.
rpc-rate-limit = 10.0
rpc-rate-burst = 40

# replication group <-> dm-Worker deployment, we'll refine it when new deployment function is available
[[deploy]]
source-id = "mysql-replica-01"
dm-worker = "172.16.10.72:8262"

[[deploy]]
source-id = "mysql-replica-02"
dm-worker = "172.16.10.73:8262"
